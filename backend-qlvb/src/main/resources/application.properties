spring.application.name=document-management-system
server.port=8080

# -- DataSource ------------------------------------------------------------
 spring.datasource.url=jdbc:postgresql://localhost:5432/qlvb
 spring.datasource.username=admin
 spring.datasource.password=Phamnam99
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# -- JPA / Hibernate -------------------------------------------------------
# Automatically create/update schema (validate | update | create | create-drop)
spring.jpa.hibernate.ddl-auto= create-drop
# Use the PostgreSQL dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# (Optional) show SQL in the console
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# -- Jackson Configuration -------------------------------------------------
# Accept case-insensitive enum values
spring.jackson.mapper.accept-case-insensitive-enums=true
# Handle unknown enum values gracefully
spring.jackson.deserialization.read-unknown-enum-values-as-null=false
# Use uppercase for enum serialization
spring.jackson.serialization.write-enums-using-to-string=false

# -- HikariCP (the default connection pool) -------------------------------
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.security.user.name=admin
spring.security.user.password=admin

# Logging
#logging.level.org.springframework.security=off
#logging.level.org.hibernate.SQL=off
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=off
#logging.level.org.springframework.web=DEBUG
# JWT Filter debugging
#logging.level.com.managementcontent=DEBUG
# JWT Configuration
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# File storage properties
document.upload-dir=./document-uploads
file.upload-dir=./uploads/
file.signature-upload-dir=./signature-uploads/
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB
# Thêm các cấu hình multipart để xử lý EOFException
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.location=${java.io.tmpdir}
spring.servlet.multipart.enabled=true
spring.servlet.multipart.resolve-lazily=false

# Server timeout configuration cho file upload lớn
server.tomcat.connection-timeout=600000
server.tomcat.max-swallow-size=200MB
server.tomcat.max-http-form-post-size=200MB

# Connection pool timeout (updated values)
spring.datasource.hikari.validation-timeout=10000

# Swagger UI configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true
springdoc.swagger-ui.docExpansion=none
springdoc.pathsToMatch=/api/**

# CORS Configuration
#app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
#app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,PATCH,DELETE,OPTIONS}
#app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
#app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:false}