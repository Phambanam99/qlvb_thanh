

{
  "openapi": "3.0.1",
  "info": {
    "title": "Document Management System API",
    "description": "API for document management system",
    "contact": {
      "name": "API Support",
      "url": "https://example.com/support",
      "email": "contact@example.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": [
        
      ]
    }
  ],
  "tags": [
    {
      "name": "Document Read Status",
      "description": "APIs for managing document read status across all document types"
    },
    {
      "name": "Senders",
      "description": "APIs for managing document sender organizations"
    },
    {
      "name": "Signatures",
      "description": "APIs for managing digital signatures"
    },
    {
      "name": "User Management",
      "description": "APIs for managing users"
    },
    {
      "name": "WorkPlan",
      "description": "API quản lý kế hoạch công việc"
    },
    {
      "name": "Document Workflow",
      "description": "APIs for document workflow operations"
    },
    {
      "name": "Enums",
      "description": "APIs for getting enum values for frontend"
    },
    {
      "name": "Departments",
      "description": "APIs for managing departments"
    },
    {
      "name": "Permissions",
      "description": "APIs for managing permissions"
    },
    {
      "name": "Outgoing Documents",
      "description": "APIs for managing outgoing documents"
    },
    {
      "name": "Internal Documents",
      "description": "APIs for managing internal documents"
    },
    {
      "name": "Schedule",
      "description": "API quản lý lịch công việc"
    },
    {
      "name": "Unified Documents",
      "description": "APIs for accessing documents in a frontend-friendly format"
    },
    {
      "name": "Notification API",
      "description": "Quản lý thông báo hệ thống"
    },
    {
      "name": "Dashboard",
      "description": "APIs for dashboard statistics and information"
    },
    {
      "name": "Roles",
      "description": "APIs for managing custom roles"
    },
    {
      "name": "Work Cases",
      "description": "APIs for managing work cases"
    },
    {
      "name": "Authentication",
      "description": "APIs for authentication and registration"
    },
    {
      "name": "Incoming Documents",
      "description": "APIs for managing incoming documents"
    },
    {
      "name": "Roles",
      "description": "APIs for managing roles"
    },
    {
      "name": "Demo Data",
      "description": "APIs để tạo và quản lý dữ liệu demo"
    }
  ],
  "paths": {
    "/api/workflow/{documentId}/update-outgoing": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Update outgoing document in workflow",
        "description": "Updates an outgoing document as part of workflow",
        "operationId": "updateOutgoingDocumentWorkflow",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullOutgoingDocumentDTO"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "File to replace existing attachment",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/submit": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Submit to leadership",
        "description": "Specialist submits document for leader approval",
        "operationId": "submitToLeadership",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully submitted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to submit document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/status": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get document status",
        "description": "Returns the current status of a document",
        "operationId": "getDocumentStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentWorkflowDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentWorkflowDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentWorkflowDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Change document status",
        "description": "Changes the status of a document in the workflow",
        "operationId": "changeDocumentStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document status successfully changed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status transition",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to change document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/start-reviewing": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Start reviewing document",
        "description": "Leader starts reviewing document",
        "operationId": "startReviewingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Comment leader/manager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document review started",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to review document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/start-processing": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Start processing document",
        "description": "Specialist starts processing the document",
        "operationId": "startProcessingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document processing started",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to process document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/resubmit-after-correction": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Tái trình công văn sau khi chỉnh sửa thể thức",
        "description": "Trợ lý/nhân viên gửi lại công văn đã chỉnh sửa thể thức để văn thư xem xét cấp số và ban hành",
        "operationId": "resubmitAfterFormatCorrection",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID của công văn",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "công văn đã được tái trình thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền tái trình công văn",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "công văn không tồn tại",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/reject-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Reject document with attachment",
        "description": "Reject document with attachment file",
        "operationId": "rejectDocumentWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Rejection comments"
                  },
                  "file": {
                    "type": "string",
                    "description": "Rejection attachment",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document rejected with attachment successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to reject document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/register": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Register incoming document",
        "description": "Văn thư registers a newly received document",
        "operationId": "registerIncomingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully registered",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to register document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/publish": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Publish outgoing document",
        "description": "Văn thư publishes an outgoing document",
        "operationId": "publishOutgoingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully published",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to publish document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/provide-feedback": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Provide feedback",
        "description": "Leader provides feedback on document",
        "operationId": "provideDocumentFeedback",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Feedback provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/provide-feedback-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Provide feedback with attachment",
        "description": "Leader provides feedback on document with attachment",
        "operationId": "provideDocumentFeedbackWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Feedback comments"
                  },
                  "file": {
                    "type": "string",
                    "description": "Feedback attachment",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback with attachment provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/leader-feedback-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Leader feedback with attachment",
        "description": "Leader provides feedback/rejection with attachment",
        "operationId": "leaderFeedbackWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Feedback comments"
                  },
                  "file": {
                    "type": "string",
                    "description": "Feedback attachment (optional)",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback with attachment provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/header-feedback-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Department header feedback with attachment",
        "description": "Department header provides feedback/rejection with attachment",
        "operationId": "headerFeedbackWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Feedback comments"
                  },
                  "file": {
                    "type": "string",
                    "description": "Feedback attachment (optional)",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department header feedback with attachment provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/header-department-review": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Start header department reviewing",
        "description": "Department header starts reviewing document",
        "operationId": "startHeaderDepartmentReviewing",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document review started by department header",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to review document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/header-department-reject-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Department header rejects document with attachment",
        "description": "Department header rejects document with attachment file",
        "operationId": "headerDepartmentRejectDocumentWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Rejection comments"
                  },
                  "file": {
                    "type": "string",
                    "description": "Rejection attachment",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document rejected with attachment by department header successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to reject document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/header-department-comment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Department header provides feedback",
        "description": "Department header provides feedback on document",
        "operationId": "commentHeaderDepartment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Department header feedback provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/header-department-comment-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Department header provides feedback with attachment",
        "description": "Department header provides feedback with attachment",
        "operationId": "commentHeaderDepartmentWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Feedback comments"
                  },
                  "file": {
                    "type": "string",
                    "description": "Feedback attachment",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department header feedback with attachment provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/header-department-approve": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Department header approves document",
        "description": "Department header approves document",
        "operationId": "approveHeaderDepartment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document approved by department header successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to approve document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/forward-to-leadership": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Forward to leadership",
        "description": "Department head forwards document for leader approval",
        "operationId": "forwardToLeadership",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully forwarded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to forward document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/format-correction": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Văn thư từ chối công văn cần chỉnh sửa thể thức",
        "description": "Văn thư từ chối công văn để yêu cầu chỉnh sửa thể thức trước khi cấp số ban hành",
        "operationId": "rejectForFormatCorrection",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID của công văn",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "công văn đã được chuyển về trạng thái chỉnh sửa thể thức",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền từ chối công văn",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy công văn",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/format-correction-with-attachment": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Văn thư từ chối công văn kèm file hướng dẫn",
        "description": "Văn thư từ chối công văn đi kèm file mẫu/hướng dẫn để yêu cầu chỉnh sửa thể thức",
        "operationId": "rejectForFormatCorrectionWithAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID của công văn",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comments",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Lý do từ chối"
                  },
                  "file": {
                    "type": "string",
                    "description": "File mẫu/hướng dẫn",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "công văn đã được từ chối thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền từ chối công văn",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy công văn",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/distribute": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Distribute document",
        "description": "Distribute document to relevant departments",
        "operationId": "distributeDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Distribution details"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully distributed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to distribute document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/approve": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Approve document",
        "description": "Leader approves document",
        "operationId": "approveDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document approved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to approve document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}": {
      "get": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Lấy chi tiết kế hoạch công việc",
        "description": "Trả về thông tin chi tiết của một kế hoạch công việc cụ thể",
        "operationId": "getWorkPlanById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Cập nhật kế hoạch công việc",
        "description": "Cập nhật thông tin một kế hoạch công việc đã tồn tại",
        "operationId": "updateWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkPlanDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Xóa kế hoạch công việc",
        "description": "Xóa một kế hoạch công việc",
        "operationId": "deleteWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Xóa kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xóa kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get user by ID",
        "description": "Returns a single user by ID. Requires ADMIN role or to be the user requested.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user",
        "description": "Updates a user's information. Requires ADMIN role or to be the user being updated.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete user",
        "description": "Deletes a user by ID. Requires ADMIN role.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/update": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user with new DTO",
        "description": "Updates a user's information using the new DTO. Requires ADMIN role or to be the user being updated.",
        "operationId": "updateUserWithNewDTO",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data provided",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/password": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user password",
        "description": "Updates a user's password. Requires ADMIN role or to be the user being updated.",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update password",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "New password"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Invalid password provided",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update this user's password",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/senders/{id}": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get sender by ID",
        "description": "Returns a sender by ID",
        "operationId": "getSenderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sender to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sender",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Sender not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Senders"
        ],
        "summary": "Update sender",
        "description": "Updates an existing sender organization",
        "operationId": "updateSender",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sender to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sender successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update senders",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Sender not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Senders"
        ],
        "summary": "Delete sender",
        "description": "Deletes a sender by ID",
        "operationId": "deleteSender",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sender to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Sender successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete senders",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Sender not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy chi tiết lịch công việc",
        "description": "Trả về thông tin chi tiết của một lịch công việc cụ thể",
        "operationId": "getScheduleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Cập nhật lịch công việc",
        "description": "Cập nhật thông tin một lịch công việc đã tồn tại",
        "operationId": "updateSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Xóa lịch công việc",
        "description": "Xóa một lịch công việc",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Xóa lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xóa lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by ID",
        "description": "Returns a single role by ID",
        "operationId": "getRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "description": "Updates an existing custom role",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomRoleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Cannot update system role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "description": "Deletes a custom role",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Role successfully deleted"
          },
          "400": {
            "description": "Cannot delete system role"
          },
          "403": {
            "description": "Not authorized to delete roles"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by ID",
        "description": "Returns a single role by ID",
        "operationId": "getRoleById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "description": "Updates an existing role",
        "operationId": "updateRole_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid role data or name conflict",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "description": "Deletes a role",
        "operationId": "deleteRole_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Role cannot be deleted because it is assigned to users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get permission by ID",
        "description": "Returns a single permission by ID",
        "operationId": "getPermissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "Update a permission",
        "description": "Updates an existing custom permission",
        "operationId": "updatePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Permission successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "400": {
            "description": "Cannot update system permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permissions"
        ],
        "summary": "Delete a permission",
        "description": "Deletes a custom permission",
        "operationId": "deletePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Permission successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete system permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/{id}": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "getGuideFileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOGuideFile"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "updateGuideFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOGuideFile"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "deleteGuideFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/{id}/file": {
      "put": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "replaceGuideFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{documentId}/type/{documentTypeId}": {
      "put": {
        "tags": [
          "document-type-workflow-controller"
        ],
        "operationId": "setDocumentType",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocument"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/{id}": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get outgoing document by ID",
        "description": "Returns a single outgoing document by ID",
        "operationId": "getOutgoingDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Update outgoing document",
        "description": "Updates an existing outgoing document",
        "operationId": "updateOutgoingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutgoingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Delete outgoing document",
        "description": "Deletes an outgoing document by ID",
        "operationId": "deleteOutgoingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Document successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{id}": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get incoming document by ID",
        "description": "Returns a single incoming document by ID",
        "operationId": "getIncomingDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Update incoming document",
        "description": "Updates an existing incoming document",
        "operationId": "updateIncomingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Delete incoming document",
        "description": "Deletes an incoming document by ID",
        "operationId": "deleteIncomingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Document successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/document-types/{id}": {
      "get": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "getDocumentTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "updateDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentType"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "deleteDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/document-types/{id}/deactivate": {
      "put": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "deactivateDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/document-types/{id}/activate": {
      "put": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "activateDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department by ID",
        "description": "Returns a single department by ID",
        "operationId": "getDepartmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the department to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved department",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Update department",
        "description": "Updates an existing department",
        "operationId": "updateDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the department to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Department successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid department data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Delete department",
        "description": "Deletes a department by ID",
        "operationId": "deleteDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the department to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Department successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/{id}/parent": {
      "put": {
        "tags": [
          "department-hierarchy-controller"
        ],
        "operationId": "updateParentDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/{id}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work case by ID",
        "description": "Returns a single work case by ID",
        "operationId": "getWorkCaseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work case to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Update work case",
        "description": "Updates an existing work case",
        "operationId": "updateWorkCase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work case to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCaseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Work case successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Delete work case",
        "description": "Deletes a work case by ID",
        "operationId": "deleteWorkCase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work case to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Work case successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/assign": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Assign document",
        "description": "Assigns a document to a user",
        "operationId": "assignDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully assigned",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to assign document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document or user not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/assign-specialist": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Assign to specialist",
        "description": "Department head assigns document to a specialist",
        "operationId": "assignToSpecialist",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully assigned",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to assign document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document or user not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/standalone-outgoing": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Tạo công văn đi độc lập",
        "description": "Tạo công văn đi mới không liên kết với công văn đến nào",
        "operationId": "createStandaloneOutgoingDocument",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OutgoingDocumentDTO"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "công văn đi độc lập được tạo thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền tạo công văn",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/incoming/{incomingDocId}/reply": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Tạo công văn đi trả lời cho công văn đến",
        "description": "Tạo công văn đi mới liên kết với công văn đến, với đầy đủ quy trình trả lời",
        "operationId": "createResponseDocument",
        "parameters": [
          {
            "name": "incomingDocId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullOutgoingDocumentDTO"
                  },
                  "attachments": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "công văn trả lời được tạo thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy công văn đến",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/incoming/{incomingDocId}/reply-multi-attachments": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Tạo công văn đi trả lời cho công văn đến với nhiều file đính kèm",
        "description": "Tạo công văn đi mới liên kết với công văn đến, với đầy đủ quy trình trả lời và hỗ trợ nhiều file đính kèm",
        "operationId": "createResponseDocumentWithMultipleAttachments",
        "parameters": [
          {
            "name": "incomingDocId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullOutgoingDocumentDTO"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Multiple files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "công văn trả lời được tạo thành công với nhiều file đính kèm",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy công văn đến",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/full": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Create full document with workflow and distribution",
        "description": "Creates a full document with workflow and distribution",
        "operationId": "createFullIncomingDocument",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullIncomingDocumentDTO"
                  },
                  "attachments": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during creation",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/full-multi-attachments": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Create full document with workflow, distribution and multiple attachments",
        "description": "Creates a full document with workflow, distribution and supports multiple file attachments",
        "operationId": "createFullIncomingDocumentWithMultipleAttachments",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullIncomingDocumentDTO"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Multiple files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document successfully created with attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during creation",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans": {
      "get": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Lấy danh sách kế hoạch công việc",
        "description": "Trả về danh sách kế hoạch công việc, có thể lọc theo phòng ban và trạng thái",
        "operationId": "getAllWorkPlans",
        "parameters": [
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Trạng thái kế hoạch (draft, pending, approved, rejected, in_progress, completed)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Ngày bắt đầu",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Ngày kết thúc",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkPlanDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Tạo kế hoạch công việc mới",
        "description": "Tạo một kế hoạch công việc mới",
        "operationId": "createWorkPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkPlanDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tạo kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền tạo kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/force-update-statuses": {
      "post": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Force update tất cả work plan statuses",
        "description": "Kiểm tra và cập nhật trạng thái cho tất cả kế hoạch dựa trên tiến độ tasks",
        "operationId": "forceUpdateAllStatuses",
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền thực hiện",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all users. Requires ADMIN role.",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "paginated",
            "in": "query",
            "description": "Optional parameter to request paginated results. If 'paginated' is provided, use the /paginated endpoint instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create new user",
        "description": "Creates a new user with the provided details. Requires ADMIN role.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data provided",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/reject": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Reject a pending user",
        "description": "Rejects and removes a user with PENDING_APPROVAL status. Requires ADMIN role.",
        "operationId": "rejectUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to reject",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully rejected",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "User is not in pending approval status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to reject users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/check-password": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Check current password",
        "description": "Kiểm tra xem mật khẩu hiện tại của người dùng có chính xác không",
        "operationId": "checkCurrentPassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của người dùng",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Mật khẩu cần kiểm tra"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password check successful",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringBoolean"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringBoolean"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to check this password",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/approve": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Approve a pending user",
        "description": "Approves a user with PENDING_APPROVAL status. Requires ADMIN role.",
        "operationId": "approveUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to approve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully approved",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "User is not in pending approval status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to approve users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/signatures": {
      "get": {
        "tags": [
          "Signatures"
        ],
        "summary": "Get user's signatures",
        "description": "Fetches a list of signatures for the currently authenticated user.",
        "operationId": "getUserSignatures",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListSignatureDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Signatures"
        ],
        "summary": "Create a new signature",
        "description": "Uploads a signature image and sets a password for it.",
        "operationId": "createSignature",
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSignatureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/signatures/{id}/image": {
      "post": {
        "tags": [
          "Signatures"
        ],
        "summary": "Get signature image data",
        "description": "Retrieves the raw image data for a signature, requires password verification.",
        "operationId": "getSignatureImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/senders": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get all senders",
        "description": "Returns a list of all document sender organizations",
        "operationId": "getAllSenders",
        "responses": {
          "200": {
            "description": "Successfully retrieved senders list",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListSenderDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Create new sender",
        "description": "Creates a new sender organization",
        "operationId": "createSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sender successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create senders",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOSenderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách lịch công việc",
        "description": "Trả về danh sách lịch công việc, có thể lọc theo phòng ban và trạng thái",
        "operationId": "getSchedules",
        "parameters": [
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Trạng thái lịch (DRAFT, SUBMITTED, APPROVED, REJECTED)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Từ ngày",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Đến ngày",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageScheduleDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Tạo lịch công việc mới",
        "description": "Tạo một lịch công việc mới",
        "operationId": "createSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tạo lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền tạo lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/reject": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Từ chối lịch",
        "description": "Từ chối lịch đã được gửi",
        "operationId": "rejectSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Từ chối thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền từ chối",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/approve": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Phê duyệt lịch",
        "description": "Phê duyệt lịch đã được gửi",
        "operationId": "approveSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Phê duyệt thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền phê duyệt",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all roles",
        "description": "Returns a list of all roles",
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "Successfully retrieved roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new role",
        "description": "Creates a new custom role",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomRoleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/{roleId}/permissions/{permissionId}": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Add permission to role",
        "description": "Adds a permission to a role",
        "operationId": "addPermissionToRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "permissionId",
            "in": "path",
            "description": "ID of the permission to add",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission successfully added to role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Cannot modify system role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role or permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Remove permission from role",
        "description": "Removes a permission from a role",
        "operationId": "removePermissionFromRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "permissionId",
            "in": "path",
            "description": "ID of the permission to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission successfully removed from role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Cannot modify system role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role or permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all roles",
        "description": "Returns a list of all roles",
        "operationId": "getAllRoles_1",
        "responses": {
          "200": {
            "description": "Successfully retrieved roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListRoleDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new role",
        "description": "Creates a new role",
        "operationId": "createRole_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid role data or role already exists",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get all permissions",
        "description": "Returns a list of all permissions",
        "operationId": "getAllPermissions",
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Create a new permission",
        "description": "Creates a new custom permission",
        "operationId": "createPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Permission successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Create new internal document",
        "description": "Creates a new internal document with recipients and optional file attachments",
        "operationId": "createDocument",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "document"
                ],
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "Document details as JSON string"
                  },
                  "files": {
                    "type": "array",
                    "description": "Files to attach (optional)",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "descriptions": {
                    "type": "array",
                    "description": "File descriptions (optional)",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "document"
                ],
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "Document details as JSON string"
                  },
                  "files": {
                    "type": "array",
                    "description": "Files to attach (optional)",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "descriptions": {
                    "type": "array",
                    "description": "File descriptions (optional)",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/reply": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Reply to a document",
        "description": "Creates a reply to an existing internal document",
        "operationId": "replyToDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to reply to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Reply successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to reply to this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Original document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/reply-with-attachments": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Reply to a document with attachments",
        "description": "Creates a reply to an existing internal document with file attachments",
        "operationId": "replyToDocumentWithAttachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to reply to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "document"
                ],
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "Reply document details as JSON string"
                  },
                  "files": {
                    "type": "array",
                    "description": "Files to attach (optional)",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "descriptions": {
                    "type": "array",
                    "description": "File descriptions (optional)",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reply with attachments successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to reply to this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Original document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/mark-read": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Mark document as read",
        "description": "Marks a document as read for the current user",
        "operationId": "markAsRead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to mark as read",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document marked as read",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to access this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/attachments": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for an internal document",
        "operationId": "uploadAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string",
                    "description": "File description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/attachments/multiple": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for an internal document",
        "operationId": "uploadMultipleAttachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "descriptions": {
                    "type": "array",
                    "description": "File descriptions",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/json": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Create new internal document (JSON only)",
        "description": "Creates a new internal document with recipients (without file attachments)",
        "operationId": "createDocumentJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/demo/create": {
      "post": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Tạo 1000 công văn nội bộ demo",
        "description": "Tạo 1000 công văn nội bộ với dữ liệu ngẫu nhiên nhưng thực tế",
        "operationId": "createDemoDocuments",
        "responses": {
          "200": {
            "description": "Tạo dữ liệu demo thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Lỗi khi tạo dữ liệu demo",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/upload": {
      "post": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "uploadGuideFile",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{id}/multiple-attachments": {
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for any document type",
        "operationId": "uploadMultipleAttachments_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{id}/attachments": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment for any document type",
        "operationId": "downloadDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for any document type",
        "operationId": "uploadDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Delete document attachment",
        "description": "Deletes a file attachment from any document type",
        "operationId": "deleteDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during deletion",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/workflow/status": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document workflow status",
        "description": "Returns the current workflow status of a document",
        "operationId": "getDocumentWorkflowStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Change document workflow status",
        "description": "Changes the workflow status of a document",
        "operationId": "changeDocumentWorkflowStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Status change details"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status successfully changed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status transition",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to change document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/workflow/assign": {
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Assign document to user",
        "description": "Assigns a document to a user for processing",
        "operationId": "assignDocumentToUser",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Assignment details"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully assigned",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to assign documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/comments": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document comments",
        "description": "Retrieves all comments for any document type",
        "operationId": "getDocumentComments",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Comment type filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments successfully retrieved",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentCommentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view comments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentCommentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentCommentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Add comment to document",
        "description": "Adds a comment to any document type",
        "operationId": "addDocumentComment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Comment data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Comment successfully added",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentCommentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid comment data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentCommentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to add comments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentCommentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentCommentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/{documentId}/mark-unread": {
      "post": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Mark document as unread",
        "description": "Marks a document as unread for the current user",
        "operationId": "markAsUnread",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to mark as unread",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of document",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document marked as unread successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/{documentId}/mark-read": {
      "post": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Mark document as read",
        "description": "Marks a document as read for the current user",
        "operationId": "markAsRead_1",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to mark as read",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of document",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document marked as read successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/batch-status": {
      "post": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Get read status for multiple documents",
        "description": "Gets read status for multiple documents for the current user",
        "operationId": "getReadStatusForDocuments",
        "parameters": [
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of documents",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "List of document IDs",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Read statuses retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapLongBoolean"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapLongBoolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapLongBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get all outgoing documents",
        "description": "Returns a paginated list of all outgoing documents",
        "operationId": "getAllOutgoingDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Create new outgoing document",
        "description": "Creates a new outgoing document",
        "operationId": "createOutgoingDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutgoingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/{id}/attachments": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get all attachments for a document",
        "description": "Returns a list of all attachments for an outgoing document",
        "operationId": "getDocumentAttachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentAttachment"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentAttachment"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentAttachment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for an outgoing document using the new DocumentAttachmentService",
        "operationId": "uploadMultipleAttachments_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/{id}/attachment": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment for an outgoing document",
        "operationId": "downloadOutgoingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for an outgoing document",
        "operationId": "uploadOutgoingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get all incoming documents",
        "description": "Returns a paginated list of all incoming documents",
        "operationId": "getAllIncomingDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Create new incoming document",
        "description": "Creates a new incoming document",
        "operationId": "createIncomingDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{id}/attachments": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get document attachments",
        "description": "Get all attachments for an incoming document using the new multi-attachment system",
        "operationId": "getDocumentAttachments_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentAttachment"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentAttachment"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentAttachment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for an incoming document",
        "operationId": "uploadMultipleAttachments_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{id}/attachment": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment for an incoming document",
        "operationId": "downloadIncomingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for an incoming document",
        "operationId": "uploadIncomingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/document-types": {
      "get": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "getAllDocumentTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "createDocumentType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/document-types/initialize": {
      "post": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "initializeDocumentTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get all departments",
        "description": "Returns a paginated list of all departments",
        "operationId": "getAllDepartments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create new department",
        "description": "Creates a new department",
        "operationId": "createDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Department successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid department data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/demo/internal-documents/create": {
      "post": {
        "tags": [
          "Demo Data"
        ],
        "summary": "Tạo 1000 công văn nội bộ demo",
        "description": "Tạo 1000 công văn nội bộ với dữ liệu ngẫu nhiên nhưng thực tế",
        "operationId": "createDemoDocuments_1",
        "responses": {
          "200": {
            "description": "Tạo dữ liệu demo thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Lỗi khi tạo dữ liệu demo",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get all work cases",
        "description": "Returns a paginated list of all work cases",
        "operationId": "getAllWorkCases",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageWorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Create new work case",
        "description": "Creates a new work case",
        "operationId": "createWorkCase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCaseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Work case successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/{caseId}/documents/{documentId}": {
      "post": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Add document to work case",
        "description": "Adds a document to a work case",
        "operationId": "addDocumentToCase",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "ID of the work case",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to add",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document successfully added to work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case or document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Remove document from work case",
        "description": "Removes a document from a work case",
        "operationId": "removeDocumentFromCase",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "ID of the work case",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document successfully removed from work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case or document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new user",
        "description": "Creates a new user account",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Username or email already exists",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during registration",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh access token",
        "description": "Uses refresh token to generate new access token",
        "operationId": "refreshAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Missing refresh token",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticates a user and returns a JWT token",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Account is disabled",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/tasks/{taskId}/status": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Cập nhật trạng thái nhiệm vụ",
        "description": "Cập nhật trạng thái và tiến độ của một nhiệm vụ trong kế hoạch",
        "operationId": "updateTaskStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật trạng thái nhiệm vụ thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanTaskDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanTaskDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật nhiệm vụ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanTaskDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch hoặc nhiệm vụ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanTaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/submit": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Gửi kế hoạch để phê duyệt",
        "description": "Chuyển trạng thái kế hoạch sang SUBMITTED để đợi phê duyệt",
        "operationId": "submitWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gửi thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể gửi (ví dụ: kế hoạch không ở trạng thái DRAFT)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền gửi kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/start": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Bắt đầu thực hiện kế hoạch",
        "description": "Chuyển kế hoạch từ trạng thái APPROVED sang IN_PROGRESS",
        "operationId": "startWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bắt đầu kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể bắt đầu kế hoạch (chưa được phê duyệt)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền bắt đầu kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/complete": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Hoàn thành kế hoạch",
        "description": "Chuyển kế hoạch từ trạng thái IN_PROGRESS sang COMPLETED",
        "operationId": "completeWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hoàn thành kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể hoàn thành kế hoạch (chưa bắt đầu hoặc còn task chưa hoàn thành)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền hoàn thành kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/approve": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Phê duyệt hoặc từ chối kế hoạch",
        "description": "Phê duyệt hoặc từ chối kế hoạch đã được gửi",
        "operationId": "approveWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Phê duyệt/từ chối thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể phê duyệt (ví dụ: kế hoạch không ở trạng thái SUBMITTED)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền phê duyệt kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/submit": {
      "patch": {
        "tags": [
          "Schedule"
        ],
        "summary": "Gửi lịch để phê duyệt",
        "description": "Chuyển trạng thái lịch sang SUBMITTED để đợi phê duyệt",
        "operationId": "submitSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gửi thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể gửi (ví dụ: lịch không ở trạng thái DRAFT)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền gửi lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/{eventId}/attendance": {
      "patch": {
        "tags": [
          "Schedule"
        ],
        "summary": "Cập nhật trạng thái tham dự sự kiện",
        "description": "Cập nhật trạng thái tham dự của một người dùng cho sự kiện",
        "operationId": "updateAttendanceStatus",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật trạng thái tham dự thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy sự kiện",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/history": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get document history",
        "description": "Returns the workflow history of a document",
        "operationId": "getDocumentHistory",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistoryDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistoryDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/departments": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get document departments",
        "description": "Get departments assigned to process a document",
        "operationId": "getDocumentDepartments",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved department list",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentDepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/users/{userId}/latest-activities": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get latest document activities by user",
        "description": "Returns the latest document activities for a specific user",
        "operationId": "getLatestDocumentActivitiesByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved latest document activities",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistory"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/my-latest-activities": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get latest document activities for current user",
        "description": "Returns the latest document activities for the currently authenticated user",
        "operationId": "getMyLatestDocumentActivities",
        "responses": {
          "200": {
            "description": "Successfully retrieved latest document activities",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistory"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/history/{historyId}/attachment": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Download attachment",
        "description": "Download attachment file from document history",
        "operationId": "downloadAttachment",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File downloaded successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download file",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/departments/{departmentId}/children": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get child departments",
        "description": "Returns all child departments for a specific department",
        "operationId": "getChildDepartments",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the parent department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved child departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Parent department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/departments/{departmentId}/children/users": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get all users from child departments",
        "description": "Returns all users from child departments of a specific parent department",
        "operationId": "getChildDepartmentsUsers",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the parent department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "Parent department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/departments/{departmentId}/children/commanders": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get commanders of child departments",
        "description": "Returns all commanders/chiefs of child departments under a specific parent department",
        "operationId": "getChildDepartmentsCommanders",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the parent department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved commanders",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "Parent department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/for-approval": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users for approval",
        "description": "Lấy danh sách người dùng có thể phê duyệt dựa trên vai trò người dùng hiện tại",
        "operationId": "getUsersForApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của người dùng",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users for approval",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/username/{username}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get user by username",
        "description": "Returns a single user by username. Requires ADMIN role or to be the user requested.",
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of the user to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/statuses": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get available user statuses",
        "description": "Returns all available user statuses with their values and display names. Useful for UI dropdowns.",
        "operationId": "getAvailableStatuses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapIntegerString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/roles": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get available user roles",
        "description": "Returns all available user roles with their codes and display names. Useful for UI dropdowns.",
        "operationId": "getAvailableRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/pending": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get all pending users",
        "description": "Returns a list of all users with PENDING_APPROVAL status. Requires ADMIN role.",
        "operationId": "getPendingUsers",
        "responses": {
          "200": {
            "description": "Successfully retrieved pending users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view pending users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/paginated": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get paginated users",
        "description": "Returns a paginated list of users with filtering support. Requires ADMIN role.",
        "operationId": "getPaginatedUsers",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "Role ID to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status to filter by (0=inactive, 1=active)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search in name, username, email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "Department ID to filter by",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved paginated users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/filter": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users by role or status",
        "description": "Returns a filtered list of users by role and/or status. Requires ADMIN role.",
        "operationId": "getUsersByFilter",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "Role to filter by. Can be either role code (ROLE_ADMIN), display name (Trưởng phòng), or enum name (DEPARTMENT_HEAD). See /api/users/roles endpoint for available roles.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER",
                "EDITOR",
                "TRUONG_PHONG",
                "PHO_PHONG",
                "CUC_TRUONG",
                "CUC_PHO",
                "NHAN_VIEN",
                "TRO_LY",
                "VAN_THU",
                "CHINH_UY",
                "PHO_CHINH_UY",
                "TRAM_TRUONG",
                "PHO_TRAM_TRUONG",
                "CHINH_TRI_VIEN_TRAM",
                "CUM_TRUONG",
                "PHO_CUM_TRUONG",
                "CHINH_TRI_VIEN_CUM",
                "TRUONG_BAN"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status to filter by. Can be status value (0,1,2,3), display name (Active), or enum name (ACTIVE). See /api/users/statuses endpoint for available statuses.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INACTIVE",
                "ACTIVE",
                "BLOCKED",
                "PENDING_APPROVAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved filtered users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/department/{departmentId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users by department ID",
        "description": "Returns a list of users by department ID. Requires ADMIN role.",
        "operationId": "getUsersByDepartmentId",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department to retrieve users from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users by department ID",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users by department",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/department/{departmentId}/roles": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users by department ID and roles",
        "description": "Returns a list of users by department ID and roles. Requires ADMIN role.",
        "operationId": "getUsersByDepartmentIdAndRoles",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department to retrieve users from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles to filter by",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users by department ID and roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users by department and roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/public": {
      "get": {
        "tags": [
          "test-controller"
        ],
        "operationId": "testPublic",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/json": {
      "get": {
        "tags": [
          "test-controller"
        ],
        "operationId": "testJson",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/test/dashboard": {
      "get": {
        "tags": [
          "test-controller"
        ],
        "operationId": "testDashboard",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/related": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách lịch liên quan",
        "description": "Trả về danh sách lịch công việc liên quan tới lịch hiện tại",
        "operationId": "getRelatedSchedules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách lịch liên quan thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách sự kiện",
        "description": "Trả về danh sách sự kiện theo các tham số",
        "operationId": "getScheduleEvents",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Ngày sự kiện",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "description": "Loại trừ ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/{id}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy chi tiết sự kiện",
        "description": "Trả về thông tin chi tiết của một sự kiện cụ thể",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleEventDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy sự kiện",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOScheduleEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/monthly": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách sự kiện trong tháng",
        "description": "Trả về danh sách sự kiện cho một tháng cụ thể",
        "operationId": "getMonthlyEvents",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Năm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Tháng (1-12)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID người dùng (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapLocalDateListScheduleEventDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapLocalDateListScheduleEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/daily": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách sự kiện trong ngày",
        "description": "Trả về danh sách sự kiện cho một ngày cụ thể",
        "operationId": "getDailyEvents",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Ngày cần lấy sự kiện (định dạng YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID người dùng (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleEventDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/department/{departmentId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách lịch công việc theo phòng ban",
        "description": "Trả về danh sách lịch công việc của một phòng ban cụ thể",
        "operationId": "getSchedulesByDepartmentId",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID của phòng ban",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách lịch theo phòng ban thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "ID phòng ban không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/system": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get system roles",
        "description": "Returns all system roles",
        "operationId": "getSystemRoles",
        "responses": {
          "200": {
            "description": "Successfully retrieved system roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/name/{name}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by name",
        "description": "Returns a single role by name",
        "operationId": "getRoleByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the role to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/custom": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get custom roles",
        "description": "Returns all custom roles",
        "operationId": "getCustomRoles",
        "responses": {
          "200": {
            "description": "Successfully retrieved custom roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/creator/{creatorId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get roles by creator",
        "description": "Returns roles created by a specific user",
        "operationId": "getRolesByCreator",
        "parameters": [
          {
            "name": "creatorId",
            "in": "path",
            "description": "ID of the creator",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles_custom/by-permission/{permissionName}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get roles by permission",
        "description": "Returns roles that have a specific permission",
        "operationId": "getRolesByPermission",
        "parameters": [
          {
            "name": "permissionName",
            "in": "path",
            "description": "Name of the permission",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomRoleDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/paginated": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get paginated roles",
        "description": "Returns a paginated list of roles",
        "operationId": "getPaginatedRoles",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageRoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageRoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/name/{name}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by name",
        "description": "Returns a single role by name",
        "operationId": "getRoleByName_1",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the role to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTORoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/system": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get system permissions",
        "description": "Returns all system permissions",
        "operationId": "getSystemPermissions",
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/name/{name}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get permission by name",
        "description": "Returns a single permission by name",
        "operationId": "getPermissionByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the permission to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/custom": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get custom permissions",
        "description": "Returns all custom permissions",
        "operationId": "getCustomPermissions",
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/category/{category}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get permissions by category",
        "description": "Returns permissions filtered by category",
        "operationId": "getPermissionsByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListPermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "Notification API"
        ],
        "summary": "Lấy danh sách thông báo",
        "description": "Trả về danh sách thông báo phân trang",
        "operationId": "getUserNotifications",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageNotification"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get internal document by ID",
        "description": "Returns a single internal document by ID. Marks as read if user is recipient.",
        "operationId": "getDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/thread": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "operationId": "getDocumentThread",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/stats": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "operationId": "getDocumentStats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/replies": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "operationId": "getDocumentReplies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/readers": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get document readers",
        "description": "Returns list of all users who should read the document with their read status",
        "operationId": "getDocumentReaders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document readers retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document readers",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/readers/read-only": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get document readers who have read",
        "description": "Returns list of users who have actually read the document",
        "operationId": "getDocumentReadersOnly",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document readers retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document readers",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/read-statistics": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get document read statistics",
        "description": "Returns read statistics for a document",
        "operationId": "getDocumentReadStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/history": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "operationId": "getDocumentHistory_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListInternalDocumentHistoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment from an internal document",
        "operationId": "downloadAttachment_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "ID of the attachment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/unread": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get unread documents for current user",
        "description": "Returns a paginated list of unread documents for the current user",
        "operationId": "getUnreadDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved unread documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/unread/count": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Count unread documents",
        "description": "Returns the count of unread documents for the current user",
        "operationId": "countUnreadDocuments",
        "responses": {
          "200": {
            "description": "Successfully retrieved unread count",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/unread/all": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get all unread documents for current user",
        "description": "Returns all unread documents for the current user (no pagination)",
        "operationId": "getAllUnreadDocuments",
        "responses": {
          "200": {
            "description": "Successfully retrieved all unread documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/type/{documentType}": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get documents by type",
        "description": "Returns documents filtered by document type",
        "operationId": "getDocumentsByType",
        "parameters": [
          {
            "name": "documentType",
            "in": "path",
            "description": "Document type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents by type",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/statistics": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get document statistics",
        "description": "Returns statistics about internal documents for the current user",
        "operationId": "getDocumentStatistics",
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/sent": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get documents sent by current user",
        "description": "Returns a paginated list of documents sent by the current user",
        "operationId": "getSentDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sent documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/sent/all": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get all documents sent by current user",
        "description": "Returns all documents sent by the current user (no pagination)",
        "operationId": "getAllSentDocuments",
        "responses": {
          "200": {
            "description": "Successfully retrieved all sent documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/search": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Search internal documents",
        "description": "Search internal documents by keyword in title, summary, or notes",
        "operationId": "searchDocuments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/search/advanced": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Advanced search with filters",
        "description": "Search documents with multiple filter criteria",
        "operationId": "searchWithFilters",
        "parameters": [
          {
            "name": "senderId",
            "in": "query",
            "description": "Sender user ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recipientUserId",
            "in": "query",
            "description": "Recipient user ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recipientDepartmentId",
            "in": "query",
            "description": "Recipient department ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Document priority",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "HOA_TOC",
                "HOA_TOC_HEN_GIO",
                "THUONG_KHAN",
                "KHAN",
                "THUONG"
              ]
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Document type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date (ISO format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/received": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get documents received by current user",
        "description": "Returns a paginated list of documents received by the current user",
        "operationId": "getReceivedDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved received documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/received/all": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get all documents received by current user",
        "description": "Returns all documents received by the current user (no pagination)",
        "operationId": "getAllReceivedDocuments",
        "responses": {
          "200": {
            "description": "Successfully retrieved all received documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/priority/{priority}": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get document by priority",
        "description": "Returns documents filtered by priority level",
        "operationId": "getDocumentsByPriority",
        "parameters": [
          {
            "name": "priority",
            "in": "path",
            "description": "Priority level",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "HOA_TOC",
                "HOA_TOC_HEN_GIO",
                "THUONG_KHAN",
                "KHAN",
                "THUONG"
              ]
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents by priority",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/demo/count": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Kiểm tra số lượng công văn",
        "description": "Trả về tổng số công văn nội bộ hiện có trong hệ thống",
        "operationId": "countDocuments",
        "responses": {
          "200": {
            "description": "Lấy thông tin thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal-documents/date-range": {
      "get": {
        "tags": [
          "Internal Documents"
        ],
        "summary": "Get documents by date range",
        "description": "Returns documents within a specific date range",
        "operationId": "getDocumentsByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents by date range",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageInternalDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "getAllGuideFiles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/{id}/download": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "downloadGuideFileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/search": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "searchGuideFiles",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/paginated": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "getGuideFilesPaginated",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/download/{fileName}": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "downloadGuideFile",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/active": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "getActiveGuideFiles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/guide-files/active/paginated": {
      "get": {
        "tags": [
          "guide-file-controller"
        ],
        "operationId": "getActiveGuideFilesPaginated",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageGuideFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/enums/security-levels": {
      "get": {
        "tags": [
          "Enums"
        ],
        "summary": "Get all security levels",
        "description": "Returns all available security levels for documents",
        "operationId": "getSecurityLevels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/enums/distribution-types": {
      "get": {
        "tags": [
          "Enums"
        ],
        "summary": "Get all distribution types",
        "description": "Returns all available distribution types for outgoing documents",
        "operationId": "getDistributionTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/enums/all": {
      "get": {
        "tags": [
          "Enums"
        ],
        "summary": "Get all enum values",
        "description": "Returns all enum values in a single response for frontend initialization",
        "operationId": "getAllEnums",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{documentId}/type": {
      "get": {
        "tags": [
          "document-type-workflow-controller"
        ],
        "operationId": "getDocumentType",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODocumentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get all documents",
        "description": "Returns a paginated list of all documents in unified format",
        "operationId": "getAllDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageUnifiedDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{id}": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document by ID",
        "description": "Returns a single document in unified format",
        "operationId": "getDocumentById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUnifiedDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUnifiedDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/workflow/history": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document workflow history",
        "description": "Returns the workflow history of a document",
        "operationId": "getDocumentWorkflowHistory",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/stats": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document statistics",
        "description": "Get document counts by type and status",
        "operationId": "getDocumentStats_1",
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/search": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Search documents",
        "description": "Search all documents by keyword",
        "operationId": "searchDocuments_1",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/by-date": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Find documents by date range",
        "description": "Find all documents within a date range",
        "operationId": "findByDateRange",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (inclusive)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (inclusive)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/{documentId}/statistics": {
      "get": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Get document read statistics",
        "description": "Returns read statistics for a document",
        "operationId": "getDocumentReadStatistics_1",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of document",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/{documentId}/readers": {
      "get": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Get document readers",
        "description": "Returns list of all users who should read the document with their read status",
        "operationId": "getDocumentReaders_1",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of document",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document readers retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/{documentId}/readers/read-only": {
      "get": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Get document readers who have read",
        "description": "Returns list of users who have actually read the document",
        "operationId": "getDocumentReadersOnly_1",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of document",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document readers retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentReaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/{documentId}/is-read": {
      "get": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Check if document is read",
        "description": "Checks if a document has been read by the current user",
        "operationId": "isDocumentRead",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to check",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of document",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read status retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringBoolean"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringBoolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/unread/ids": {
      "get": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Get unread document IDs",
        "description": "Returns list of unread document IDs for the current user",
        "operationId": "getUnreadDocumentIds",
        "parameters": [
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of documents",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unread document IDs retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListLong"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListLong"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/read-status/unread/count": {
      "get": {
        "tags": [
          "Document Read Status"
        ],
        "summary": "Count unread documents",
        "description": "Returns the count of unread documents for the current user",
        "operationId": "countUnreadDocuments_1",
        "parameters": [
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of documents",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING_EXTERNAL",
                "INCOMING_INTERNAL",
                "OUTGOING_INTERNAL",
                "OUTGOING_EXTERNAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unread count retrieved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringLong"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringLong"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/{documentId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Download specific attachment",
        "description": "Downloads a specific attachment by attachment ID",
        "operationId": "downloadSpecificAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "ID of the attachment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Delete specific attachment",
        "description": "Deletes a specific attachment by attachment ID",
        "operationId": "deleteSpecificAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "ID of the attachment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during deletion",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/search": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Search outgoing documents",
        "description": "Search outgoing documents by keyword",
        "operationId": "searchOutgoingDocuments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/related": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get related documents",
        "description": "Returns a list of related documents",
        "operationId": "getRelatedDocuments",
        "parameters": [
          {
            "name": "relatedDocuments",
            "in": "query",
            "description": "Related documents to search for (encoded if contains commas)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved related documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view related documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListOutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/incoming-attachment/{incomingDocumentId}": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Download incoming document attachment",
        "description": "Downloads a file attachment from a related incoming document",
        "operationId": "downloadIncomingAttachment",
        "parameters": [
          {
            "name": "incomingDocumentId",
            "in": "path",
            "description": "ID of the incoming document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/document-type": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Find documents by type",
        "description": "Returns documents matching a specific document type",
        "operationId": "findByDocumentType",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Document type to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/date-range": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Find documents by date range",
        "description": "Returns documents within a specific date range",
        "operationId": "findByDateRange_1",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{id}/attachments/summary": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get attachment summary",
        "description": "Get attachment count and total size for a document",
        "operationId": "getAttachmentSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved attachment summary",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOAttachmentSummary"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOAttachmentSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{documentId}/departments": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get departments assignt document by ID",
        "description": "Returns a list of departments by document ID",
        "operationId": "getDepartmentsByDocumentId",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{documentId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Download specific attachment",
        "description": "Download a specific attachment file by attachment ID",
        "operationId": "downloadSpecificAttachment_1",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "ID of the attachment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/urgency-level": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Find documents by urgency level",
        "description": "Returns documents matching a specific urgency level",
        "operationId": "findByUrgencyLevel",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Urgency level to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/search": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Search incoming documents",
        "description": "Search incoming documents by keyword",
        "operationId": "searchIncomingDocuments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/processing-status": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Find documents by processing status",
        "description": "Returns documents with a specific processing status",
        "operationId": "findByProcessingStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Processing status to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/department/{departmentId}": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get all documents by department ID",
        "description": "Returns a list of documents assigned to a specific department",
        "operationId": "getAllDocumentsByDepartmentId",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this department's documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/date-range": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Find documents by date range",
        "description": "Returns documents within a specific date range",
        "operationId": "findByDateRange_2",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/classification/{documentId}": {
      "get": {
        "tags": [
          "document-classification-controller"
        ],
        "operationId": "classifyDocumentForCurrentUser",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/classification/{documentId}/user/{userId}": {
      "get": {
        "tags": [
          "document-classification-controller"
        ],
        "operationId": "classifyDocumentForUser",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/classification/summary": {
      "get": {
        "tags": [
          "document-classification-controller"
        ],
        "operationId": "getDocumentSummaryForCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/document-types/active": {
      "get": {
        "tags": [
          "document-type-controller"
        ],
        "operationId": "getActiveDocumentTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDocumentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/{id}/children": {
      "get": {
        "tags": [
          "department-hierarchy-controller"
        ],
        "operationId": "getChildDepartments_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/types": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department types",
        "description": "Returns a list of available department types and their descriptions",
        "operationId": "getDepartmentTypes",
        "responses": {
          "200": {
            "description": "Successfully retrieved department types",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view department types",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/type/{typeCode}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Find departments by type",
        "description": "Returns departments matching a specific type",
        "operationId": "findDepartmentsByType",
        "parameters": [
          {
            "name": "typeCode",
            "in": "path",
            "description": "Department type code to filter by",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid department type",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/statistics": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department statistics",
        "description": "Returns statistics about departments",
        "operationId": "getDepartmentStatistics",
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/search": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Search departments",
        "description": "Search departments by name or abbreviation",
        "operationId": "searchDepartments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to search departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/hierarchy": {
      "get": {
        "tags": [
          "department-hierarchy-controller"
        ],
        "operationId": "getDepartmentHierarchy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/group/{group}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Find departments by group",
        "description": "Returns departments belonging to a specific group",
        "operationId": "findDepartmentsByGroup",
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "description": "Department group to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/demo/internal-documents/count": {
      "get": {
        "tags": [
          "Demo Data"
        ],
        "summary": "Kiểm tra số lượng công văn",
        "description": "Trả về tổng số công văn nội bộ hiện có trong hệ thống",
        "operationId": "countDocuments_1",
        "responses": {
          "200": {
            "description": "Lấy thông tin thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get system dashboard statistics",
        "description": "Returns overall system dashboard statistics",
        "operationId": "getSystemDashboardStatistics",
        "responses": {
          "200": {
            "description": "Successfully retrieved system dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/user/{userId}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get user dashboard statistics",
        "description": "Returns dashboard statistics for a specific user",
        "operationId": "getUserDashboardStatistics",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODashboardDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/status-breakdown": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getStatusBreakdown",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getDashboardStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/schedules/today": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get today's schedule events",
        "description": "Returns schedule events for today or a specified date",
        "operationId": "getTodayScheduleEvents",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Optional date parameter (yyyy-MM-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved schedule events",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListScheduleEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/recent-documents": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getRecentDocuments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/quick-metrics": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getQuickMetrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/period-stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getPeriodStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/overall-stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getOverallStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/outgoing-stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getOutgoingDocumentStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/me": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get current user's dashboard statistics",
        "description": "Returns comprehensive dashboard statistics for the current authenticated user including internal documents",
        "operationId": "getCurrentUserDashboardStatistics",
        "responses": {
          "200": {
            "description": "Successfully retrieved current user's dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          },
          "404": {
            "description": "Current user not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/internal-stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getInternalDocumentStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/incoming-stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "getIncomingDocumentStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/department/{departmentId}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get department dashboard statistics",
        "description": "Returns dashboard statistics for a specific department",
        "operationId": "getDepartmentDashboardStatistics",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved department dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODashboardDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTODashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/status/{status}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by status",
        "description": "Returns work cases with a specific status",
        "operationId": "getWorkCasesByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Status to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/search": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Search work cases",
        "description": "Search work cases by keyword",
        "operationId": "searchWorkCases",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOPageWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/priority/{priority}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by priority",
        "description": "Returns work cases with a specific priority",
        "operationId": "getWorkCasesByPriority",
        "parameters": [
          {
            "name": "priority",
            "in": "path",
            "description": "Priority to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/overdue": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get overdue cases",
        "description": "Returns work cases past their deadline",
        "operationId": "getOverdueCases",
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/creator/{creatorId}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by creator",
        "description": "Returns work cases created by a specific user",
        "operationId": "getWorkCasesByCreator",
        "parameters": [
          {
            "name": "creatorId",
            "in": "path",
            "description": "ID of the creator",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/code/{caseCode}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work case by case code",
        "description": "Returns a single work case by case code",
        "operationId": "getWorkCaseByCaseCode",
        "parameters": [
          {
            "name": "caseCode",
            "in": "path",
            "description": "Case code of the work case to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/by-document/{documentId}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by document",
        "description": "Returns work cases related to a specific document",
        "operationId": "getWorkCasesByDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/assignee/{assigneeId}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by assignee",
        "description": "Returns work cases assigned to a specific user",
        "operationId": "getWorkCasesByAssignee",
        "parameters": [
          {
            "name": "assigneeId",
            "in": "path",
            "description": "ID of the assignee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOListWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/signatures/{id}": {
      "delete": {
        "tags": [
          "Signatures"
        ],
        "summary": "Delete a signature",
        "description": "Deletes a signature by its ID, requires password verification.",
        "operationId": "deleteSignature",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/comments/{commentId}": {
      "delete": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Delete document comment",
        "description": "Deletes a comment from any document type",
        "operationId": "deleteDocumentComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete comments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/attachments/{attachmentId}": {
      "delete": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Delete specific attachment",
        "description": "Delete a specific attachment by attachment ID",
        "operationId": "deleteSpecificAttachment_1",
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "description": "ID of the attachment to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during deletion",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/api/demo/internal-documents/clear": {
      "delete": {
        "tags": [
          "Demo Data"
        ],
        "summary": "Xóa tất cả công văn demo",
        "description": "Xóa tất cả công văn demo đã tạo (để test lại)",
        "operationId": "clearDemoDocuments",
        "responses": {
          "200": {
            "description": "Xóa dữ liệu demo thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          },
          "500": {
            "description": "Lỗi khi xóa dữ liệu demo",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTOString"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "typeCode": {
            "type": "integer",
            "format": "int32"
          },
          "externalId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "parentDepartment": {
            "$ref": "#/components/schemas/Department"
          },
          "childDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            }
          },
          "assignedDocuments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDepartment"
            }
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "REGISTERED",
              "FORMAT_CORRECTION",
              "FORMAT_CORRECTED",
              "DISTRIBUTED",
              "DEPT_ASSIGNED",
              "PENDING_APPROVAL",
              "SPECIALIST_PROCESSING",
              "SPECIALIST_SUBMITTED",
              "LEADER_REVIEWING",
              "LEADER_APPROVED",
              "LEADER_COMMENTED",
              "NOT_PROCESSED",
              "IN_PROCESS",
              "PROCESSED",
              "PUBLISHED",
              "COMPLETED",
              "REJECTED",
              "ARCHIVED",
              "HEADER_DEPARTMENT_REVIEWING",
              "HEADER_DEPARTMENT_APPROVED",
              "HEADER_DEPARTMENT_COMMENTED"
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentFilename": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date-time"
          },
          "processDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "assignedDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDepartment"
            }
          },
          "userPrimaryProcessor": {
            "$ref": "#/components/schemas/User"
          },
          "history": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentHistory"
            }
          }
        }
      },
      "DocumentDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "department": {
            "$ref": "#/components/schemas/Department"
          },
          "comments": {
            "type": "string"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignedBy": {
            "$ref": "#/components/schemas/User"
          },
          "processingStatus": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "DocumentHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "action": {
            "type": "string"
          },
          "previousStatus": {
            "type": "string"
          },
          "newStatus": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "attachmentPath": {
            "type": "string"
          },
          "primaryDepartment": {
            "$ref": "#/components/schemas/Department"
          },
          "assignedTo": {
            "$ref": "#/components/schemas/User"
          },
          "performedBy": {
            "$ref": "#/components/schemas/User"
          },
          "collaboratingDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DocumentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "pass": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastAccess": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "department": {
            "$ref": "#/components/schemas/Department"
          },
          "isCommanderOfUnit": {
            "type": "boolean"
          },
          "userStatus": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "PENDING_APPROVAL"
            ]
          }
        }
      },
      "GuideFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "fileUrl": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdByName": {
            "type": "string"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DocumentAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "originalFilename": {
            "type": "string"
          },
          "storedFilename": {
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "uploadedDate": {
            "type": "string",
            "format": "date-time"
          },
          "uploadedBy": {
            "$ref": "#/components/schemas/User"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "STATUS_CHANGE",
              "DEADLINE_REMINDER",
              "NEW_DOCUMENT",
              "ASSIGNMENT",
              "NEW_COMMENT",
              "DOCUMENT_UPDATE"
            ]
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "read": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "DepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ADMINISTRATIVE",
              "PROFESSIONAL",
              "SUPPORT",
              "SUBSIDIARY",
              "LEADERSHIP"
            ]
          },
          "externalId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          },
          "assignedDocumentsCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "parentDepartmentName": {
            "type": "string"
          },
          "childDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentDTO"
            }
          },
          "storageLocation": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "typeCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Department details"
      },
      "DocumentWorkflowDTO": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDisplayName": {
            "type": "string"
          },
          "assignedToId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedToIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "assignedToNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "primaryDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "primaryDepartmentName": {
            "type": "string"
          },
          "collaboratingDepartmentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "collaboratingDepartmentNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedToName": {
            "type": "string"
          },
          "closureDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "comments": {
            "type": "string"
          }
        },
        "description": "Workflow details"
      },
      "FullOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/OutgoingDocumentDTO"
          },
          "workflow": {
            "$ref": "#/components/schemas/DocumentWorkflowDTO"
          },
          "incomingDocumentId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Document details"
      },
      "OutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusDisplayName": {
            "type": "string"
          },
          "trackingStatus": {
            "type": "string"
          },
          "trackingStatusDisplayName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "signerId": {
            "type": "integer",
            "format": "int64"
          },
          "summary": {
            "type": "string"
          },
          "signerName": {
            "type": "string"
          },
          "signerPosition": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date-time"
          },
          "draftingDepartment": {
            "type": "string"
          },
          "draftingDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "relatedDocuments": {
            "type": "string"
          },
          "storageLocation": {
            "type": "integer",
            "format": "int32"
          },
          "documentVolume": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "receivingDepartmentText": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentFilename": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          },
          "draftingDepartmentEntity": {
            "$ref": "#/components/schemas/DepartmentDTO"
          },
          "draftingDepartmentEntityId": {
            "type": "integer",
            "format": "int64"
          },
          "securityLevel": {
            "type": "string"
          },
          "securityLevelDisplayName": {
            "type": "string"
          },
          "documentSigner": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "documentSignerId": {
            "type": "integer",
            "format": "int64"
          },
          "isSecureTransmission": {
            "type": "boolean"
          },
          "processingDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "issuingAgency": {
            "type": "string"
          },
          "distributionType": {
            "type": "integer",
            "format": "int32"
          },
          "distributionTypeDisplayName": {
            "type": "string"
          },
          "numberOfCopies": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPages": {
            "type": "integer",
            "format": "int32"
          },
          "noPaperCopy": {
            "type": "boolean"
          }
        },
        "description": "Document details"
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "userStatus": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "PENDING_APPROVAL"
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastAccess": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER",
                "EDITOR",
                "TRUONG_PHONG",
                "PHO_PHONG",
                "CUC_TRUONG",
                "CUC_PHO",
                "NHAN_VIEN",
                "TRO_LY",
                "VAN_THU",
                "CHINH_UY",
                "PHO_CHINH_UY",
                "TRAM_TRUONG",
                "PHO_TRAM_TRUONG",
                "CHINH_TRI_VIEN_TRAM",
                "CUM_TRUONG",
                "PHO_CUM_TRUONG",
                "CHINH_TRI_VIEN_CUM",
                "TRUONG_BAN"
              ]
            }
          },
          "isCommanderOfUnit": {
            "type": "boolean"
          },
          "statusDisplayName": {
            "type": "string"
          },
          "roleDisplayNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "User registration details"
      },
      "ResponseDTOObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ResponseDTOString": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "DocumentLinkDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "WorkPlanDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkPlanTaskDTO"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLinkDTO"
            }
          }
        }
      },
      "WorkPlanTaskDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "assignee": {
            "type": "string"
          },
          "assigneeId": {
            "type": "integer",
            "format": "int64"
          },
          "assigneeName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "statusComments": {
            "type": "string"
          },
          "workPlanId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseDTOWorkPlanDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/WorkPlanDTO"
          }
        }
      },
      "ResponseDTOUserDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserDTO"
          }
        }
      },
      "UpdateUserDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "userStatus": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "PENDING_APPROVAL"
            ]
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER",
                "EDITOR",
                "TRUONG_PHONG",
                "PHO_PHONG",
                "CUC_TRUONG",
                "CUC_PHO",
                "NHAN_VIEN",
                "TRO_LY",
                "VAN_THU",
                "CHINH_UY",
                "PHO_CHINH_UY",
                "TRAM_TRUONG",
                "PHO_TRAM_TRUONG",
                "CHINH_TRI_VIEN_TRAM",
                "CUM_TRUONG",
                "PHO_CUM_TRUONG",
                "CHINH_TRI_VIEN_CUM",
                "TRUONG_BAN"
              ]
            }
          },
          "isCommanderOfUnit": {
            "type": "boolean"
          }
        },
        "description": "Updated user information"
      },
      "SenderDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Sender details"
      },
      "ResponseDTOSenderDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/SenderDTO"
          }
        }
      },
      "ScheduleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "period": {
            "type": "string"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdByName": {
            "type": "string"
          },
          "approvedById": {
            "type": "integer",
            "format": "int64"
          },
          "approvedByName": {
            "type": "string"
          },
          "approvalDate": {
            "type": "string",
            "format": "date-time"
          },
          "approvalComments": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEventDTO"
            }
          }
        }
      },
      "ScheduleEventDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "location": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "participantNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseDTOScheduleDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ScheduleDTO"
          }
        }
      },
      "CustomRoleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "systemRole": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdByName": {
            "type": "string"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDTO"
            }
          }
        },
        "description": "Role details"
      },
      "PermissionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "systemPermission": {
            "type": "boolean"
          }
        },
        "description": "Permission details"
      },
      "UpdateRoleDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Updated role details"
      },
      "ResponseDTORoleDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RoleDTO"
          }
        }
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseDTOPermissionDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PermissionDTO"
          }
        }
      },
      "ResponseDTOGuideFile": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/GuideFile"
          }
        }
      },
      "ResponseDTODocument": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "ResponseDTOOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/OutgoingDocumentDTO"
          }
        }
      },
      "IncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "issuingAuthority": {
            "type": "string"
          },
          "urgencyLevel": {
            "type": "string"
          },
          "securityLevel": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date"
          },
          "receivedDate": {
            "type": "string",
            "format": "date"
          },
          "processingStatus": {
            "type": "string"
          },
          "displayStatus": {
            "type": "string"
          },
          "trackingStatus": {
            "type": "string"
          },
          "trackingStatusDisplayName": {
            "type": "string"
          },
          "closureRequest": {
            "type": "boolean"
          },
          "closureDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "sendingDepartmentName": {
            "type": "string"
          },
          "collaboratingDepartmentNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collaboratingDepartmentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "emailSource": {
            "type": "string"
          },
          "primaryProcessDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "primaryProcessor": {
            "$ref": "#/components/schemas/DepartmentDTO"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentFilename": {
            "type": "string"
          },
          "userPrimaryProcessor": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "storageLocation": {
            "type": "string"
          },
          "receiptNumber": {
            "type": "string"
          },
          "processingOfficer": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "processingOfficerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Document details"
      },
      "ResponseDTOIncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/IncomingDocumentDTO"
          }
        }
      },
      "ResponseDTODocumentType": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DocumentType"
          }
        }
      },
      "ResponseDTODepartmentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DepartmentDTO"
          }
        }
      },
      "ResponseDTODepartment": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Department"
          }
        }
      },
      "WorkCaseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "caseCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdByName": {
            "type": "string"
          },
          "assignedToId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedToName": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "string"
          },
          "documentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "Work case details"
      },
      "ResponseDTOWorkCaseDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/WorkCaseDTO"
          }
        }
      },
      "FullIncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IncomingDocumentDTO"
          },
          "workflow": {
            "$ref": "#/components/schemas/DocumentWorkflowDTO"
          }
        },
        "description": "Document details"
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "userStatus": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "PENDING_APPROVAL"
            ]
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER",
                "EDITOR",
                "TRUONG_PHONG",
                "PHO_PHONG",
                "CUC_TRUONG",
                "CUC_PHO",
                "NHAN_VIEN",
                "TRO_LY",
                "VAN_THU",
                "CHINH_UY",
                "PHO_CHINH_UY",
                "TRAM_TRUONG",
                "PHO_TRAM_TRUONG",
                "CHINH_TRI_VIEN_TRAM",
                "CUM_TRUONG",
                "PHO_CUM_TRUONG",
                "CHINH_TRI_VIEN_CUM",
                "TRUONG_BAN"
              ]
            }
          },
          "isCommanderOfUnit": {
            "type": "boolean"
          }
        },
        "description": "User details"
      },
      "ResponseDTOMapStringBoolean": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "ResponseDTOSignatureDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/SignatureDTO"
          }
        }
      },
      "SignatureDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "CreateRoleDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Role details"
      },
      "AttachmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "filename": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time"
          },
          "uploadedByName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "InternalDocumentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentNumber": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "type": "string",
            "enum": [
              "HOA_TOC",
              "HOA_TOC_HEN_GIO",
              "THUONG_KHAN",
              "KHAN",
              "THUONG"
            ]
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "REGISTERED",
              "FORMAT_CORRECTION",
              "FORMAT_CORRECTED",
              "DISTRIBUTED",
              "DEPT_ASSIGNED",
              "PENDING_APPROVAL",
              "SPECIALIST_PROCESSING",
              "SPECIALIST_SUBMITTED",
              "LEADER_REVIEWING",
              "LEADER_APPROVED",
              "LEADER_COMMENTED",
              "NOT_PROCESSED",
              "IN_PROCESS",
              "PROCESSED",
              "PUBLISHED",
              "COMPLETED",
              "REJECTED",
              "ARCHIVED",
              "HEADER_DEPARTMENT_REVIEWING",
              "HEADER_DEPARTMENT_APPROVED",
              "HEADER_DEPARTMENT_COMMENTED"
            ]
          },
          "isInternal": {
            "type": "boolean"
          },
          "signer": {
            "type": "string"
          },
          "numberReceived": {
            "type": "integer",
            "format": "int64"
          },
          "senderId": {
            "type": "integer",
            "format": "int64"
          },
          "senderName": {
            "type": "string"
          },
          "senderDepartment": {
            "type": "string"
          },
          "draftingDepartment": {
            "$ref": "#/components/schemas/DepartmentDTO"
          },
          "securityLevel": {
            "type": "string",
            "enum": [
              "NORMAL",
              "CONFIDENTIAL",
              "SECRET",
              "TOP_SECRET"
            ]
          },
          "documentSigner": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "isSecureTransmission": {
            "type": "boolean"
          },
          "processingDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "issuingAgency": {
            "type": "string"
          },
          "distributionType": {
            "type": "string",
            "enum": [
              "REGULAR",
              "CONFIDENTIAL",
              "COPY_BOOK",
              "PARTY",
              "STEERING_COMMITTEE"
            ]
          },
          "distributionTypeDisplayName": {
            "type": "string"
          },
          "numberOfCopies": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPages": {
            "type": "integer",
            "format": "int32"
          },
          "noPaperCopy": {
            "type": "boolean"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientDTO"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentDTO"
            }
          },
          "replyToId": {
            "type": "integer",
            "format": "int64"
          },
          "replyToTitle": {
            "type": "string"
          },
          "replyCount": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          },
          "readAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecipientDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "readAt": {
            "type": "string",
            "format": "date-time"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "ResponseDTOInternalDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/InternalDocumentDTO"
          }
        }
      },
      "CreateInternalDocumentDTO": {
        "required": [
          "documentNumber",
          "recipients",
          "title",
          "urgencyLevel"
        ],
        "type": "object",
        "properties": {
          "documentNumber": {
            "type": "string"
          },
          "title": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "numberReceive": {
            "type": "integer",
            "format": "int64"
          },
          "summary": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date-time"
          },
          "urgencyLevel": {
            "type": "string",
            "enum": [
              "HOA_TOC",
              "HOA_TOC_HEN_GIO",
              "THUONG_KHAN",
              "KHAN",
              "THUONG"
            ]
          },
          "notes": {
            "type": "string"
          },
          "signer": {
            "type": "string"
          },
          "draftingDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "securityLevel": {
            "type": "string",
            "enum": [
              "NORMAL",
              "CONFIDENTIAL",
              "SECRET",
              "TOP_SECRET"
            ]
          },
          "documentSignerId": {
            "type": "integer",
            "format": "int64"
          },
          "isSecureTransmission": {
            "type": "boolean"
          },
          "processingDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "issuingAgency": {
            "type": "string"
          },
          "distributionType": {
            "type": "string",
            "enum": [
              "REGULAR",
              "CONFIDENTIAL",
              "COPY_BOOK",
              "PARTY",
              "STEERING_COMMITTEE"
            ]
          },
          "numberOfCopies": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPages": {
            "type": "integer",
            "format": "int32"
          },
          "noPaperCopy": {
            "type": "boolean"
          },
          "recipients": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientRequest"
            }
          },
          "replyToId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Document details"
      },
      "RecipientRequest": {
        "required": [
          "departmentId"
        ],
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "ResponseDTOMapStringObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DocumentCommentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTitle": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "userAvatar": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ResponseDTODocumentCommentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DocumentCommentDTO"
          }
        }
      },
      "ResponseDTOMapLongBoolean": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "AuthRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "description": "Login credentials"
      },
      "ResponseDTOWorkPlanTaskDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/WorkPlanTaskDTO"
          }
        }
      },
      "ResponseDTODocumentWorkflowDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DocumentWorkflowDTO"
          }
        }
      },
      "DocumentHistoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTitle": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "attachmentPath": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "previousStatus": {
            "type": "string"
          },
          "previousStatusDisplayName": {
            "type": "string"
          },
          "newStatus": {
            "type": "string"
          },
          "newStatusDisplayName": {
            "type": "string"
          },
          "actorId": {
            "type": "integer",
            "format": "int64"
          },
          "actorName": {
            "type": "string"
          },
          "assignedToNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedToId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedToName": {
            "type": "string"
          }
        }
      },
      "ResponseDTOListDocumentHistoryDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentHistoryDTO"
            }
          }
        }
      },
      "DocumentDepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTitle": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignedById": {
            "type": "integer",
            "format": "int64"
          },
          "assignedByName": {
            "type": "string"
          },
          "processingStatus": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOListDocumentDepartmentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDepartmentDTO"
            }
          }
        }
      },
      "ResponseDTOListDocumentHistory": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentHistory"
            }
          }
        }
      },
      "ResponseDTOListDepartmentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentDTO"
            }
          }
        }
      },
      "ResponseDTOListUserDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDTO"
            }
          }
        }
      },
      "ResponseDTOListWorkPlanDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkPlanDTO"
            }
          }
        }
      },
      "ResponseDTOMapIntegerString": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ResponseDTOMapStringString": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageUserDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          },
          "paged": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageUserDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageUserDTO"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOListSignatureDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignatureDTO"
            }
          }
        }
      },
      "ResponseDTOListSenderDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SenderDTO"
            }
          }
        }
      },
      "PageScheduleDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageScheduleDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageScheduleDTO"
          }
        }
      },
      "ResponseDTOListScheduleDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDTO"
            }
          }
        }
      },
      "ResponseDTOListScheduleEventDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEventDTO"
            }
          }
        }
      },
      "ResponseDTOScheduleEventDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ScheduleEventDTO"
          }
        }
      },
      "ResponseDTOMapLocalDateListScheduleEventDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScheduleEventDTO"
              }
            }
          }
        }
      },
      "ResponseDTOListRoleDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDTO"
            }
          }
        }
      },
      "PageRoleDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageRoleDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageRoleDTO"
          }
        }
      },
      "ResponseDTOListPermissionDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDTO"
            }
          }
        }
      },
      "PageNotification": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageNotification": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageNotification"
          }
        }
      },
      "ResponseDTOListInternalDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalDocumentDTO"
            }
          }
        }
      },
      "DocumentReaderDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "readAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "avatarUrl": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOListDocumentReaderDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentReaderDTO"
            }
          }
        }
      },
      "InternalDocumentHistoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "performedById": {
            "type": "integer",
            "format": "int64"
          },
          "performedByName": {
            "type": "string"
          },
          "performedByDepartment": {
            "type": "string"
          },
          "performedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseDTOListInternalDocumentHistoryDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalDocumentHistoryDTO"
            }
          }
        }
      },
      "PageInternalDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageInternalDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageInternalDocumentDTO"
          }
        }
      },
      "ResponseDTOLong": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseDTOListGuideFile": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuideFile"
            }
          }
        }
      },
      "ResponseDTOResource": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "PageGuideFile": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuideFile"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageGuideFile": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageGuideFile"
          }
        }
      },
      "DocumentAttachmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "uploadDate": {
            "type": "string"
          },
          "uploadedBy": {
            "type": "string"
          }
        }
      },
      "PageUnifiedDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnifiedDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageUnifiedDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageUnifiedDocumentDTO"
          }
        }
      },
      "UnifiedDocumentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "referenceDate": {
            "type": "string"
          },
          "issuingAgency": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "processingDepartmentId": {
            "type": "string"
          },
          "processingDepartment": {
            "type": "string"
          },
          "receivedDate": {
            "type": "string"
          },
          "receivedTime": {
            "type": "string"
          },
          "securityLevel": {
            "type": "string"
          },
          "urgencyLevel": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "hasAttachment": {
            "type": "boolean"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentAttachmentDTO"
            }
          },
          "assignedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTypeCode": {
            "type": "string"
          },
          "documentTypeName": {
            "type": "string"
          },
          "deadline": {
            "type": "string"
          },
          "requiresResponse": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCommentDTO"
            }
          },
          "content": {
            "type": "string"
          },
          "includesEnclosure": {
            "type": "boolean"
          },
          "confidentialReturn": {
            "type": "boolean"
          },
          "legalDocument": {
            "type": "boolean"
          },
          "primaryHandler": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOUnifiedDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UnifiedDocumentDTO"
          }
        }
      },
      "ResponseDTOListMapStringObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ResponseDTOListDocumentCommentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCommentDTO"
            }
          }
        }
      },
      "ResponseDTOListLong": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ResponseDTOMapStringLong": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "PageOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutgoingDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageOutgoingDocumentDTO"
          }
        }
      },
      "ResponseDTOListDocumentAttachment": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentAttachment"
            }
          }
        }
      },
      "ResponseDTOListOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutgoingDocumentDTO"
            }
          }
        }
      },
      "PageIncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomingDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageIncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageIncomingDocumentDTO"
          }
        }
      },
      "AttachmentSummary": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "formattedSize": {
            "type": "string"
          }
        }
      },
      "ResponseDTOAttachmentSummary": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/AttachmentSummary"
          }
        }
      },
      "ResponseDTOListDocumentType": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentType"
            }
          }
        }
      },
      "PageDepartmentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageDepartmentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDepartmentDTO"
          }
        }
      },
      "ResponseDTOListDepartment": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            }
          }
        }
      },
      "DashboardDTO": {
        "type": "object",
        "properties": {
          "totalDocuments": {
            "type": "integer",
            "format": "int32"
          },
          "incomingDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "outgoingDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "documentsByStatus": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "documentsByMonth": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pendingDocumentCount": {
            "type": "integer",
            "format": "int64"
          },
          "pendingDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSummaryDTO"
            }
          },
          "upcomingDeadlines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSummaryDTO"
            }
          },
          "overdueDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSummaryDTO"
            }
          },
          "overdueDocumentCount": {
            "type": "integer",
            "format": "int64"
          },
          "activeWorkPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkPlanSummaryDTO"
            }
          },
          "unreadNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "performanceMetrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DocumentSummaryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "deadline": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "department": {
            "type": "string"
          }
        }
      },
      "ResponseDTODashboardDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DashboardDTO"
          }
        }
      },
      "WorkPlanSummaryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "period": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "completedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "totalTasks": {
            "type": "integer",
            "format": "int32"
          },
          "progress": {
            "type": "string"
          }
        }
      },
      "PageWorkCaseDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkCaseDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResponseDTOPageWorkCaseDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageWorkCaseDTO"
          }
        }
      },
      "ResponseDTOListWorkCaseDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkCaseDTO"
            }
          }
        }
      },
      "ResponseDTOVoid": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}